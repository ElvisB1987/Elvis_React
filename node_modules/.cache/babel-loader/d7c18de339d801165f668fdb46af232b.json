{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Elvis\\\\Desktop\\\\QuantoxTask\\\\React_E_Comerce\\\\react-schopping-cart\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useQuery } from 'react-query'; // Components\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getProducts = async () => await (await fetch('https://fakestoreapi.com/products')).json();\n\nconst App = () => {\n  _s();\n\n  const {\n    data,\n    isLoading,\n    error\n  } = useQuery('products', getProducts);\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: \"Start\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 10\n  }, this); //   const getTotalItems = () => null;\n  //   const handleAddToCart = (clickItem: CartItemType) => null;\n  //   const handleRemoveFromcart = () => null;\n  //   if (isLoading) return <LinearProgress />\n  //   if (error) return <div>Somthing went wrong</div>;\n  //   return\n  //   <Wrapper>\n  //     <Grid container spacing={3}>\n  //       {data?.map(item => (\n  //         <Grid item key={item.id} xs={12} sm={4}>\n  //           <Item item={item} handleAddToCart={handleAddToCart} />\n  //         </Grid>\n  //       ))}\n  //     </Grid>\n  //   </Wrapper>\n};\n\n_s(App, \"Z3b93vmhJEnCPN4ovcxRGbOtffM=\", false, function () {\n  return [useQuery];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Elvis/Desktop/QuantoxTask/React_E_Comerce/react-schopping-cart/src/App.tsx"],"names":["useQuery","getProducts","fetch","json","App","data","isLoading","error","console","log"],"mappings":";;;AACA,SAASA,QAAT,QAAyB,aAAzB,C,CACA;;;;AAsBA,MAAMC,WAAW,GAAG,YAClB,MAAM,CAAC,MAAMC,KAAK,CAAC,mCAAD,CAAZ,EAAmDC,IAAnD,EADR;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,SAAR;AAAmBC,IAAAA;AAAnB,MAA6BP,QAAQ,CACzC,UADyC,EAEzCC,WAFyC,CAA3C;AAIAO,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AAEA,sBAAO;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP,CAPgB,CAQlB;AAEA;AAEA;AAEA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACC,CA/BD;;GAAMD,G;UAC+BJ,Q;;;KAD/BI,G;AAiCN,eAAeA,GAAf","sourcesContent":["import { useState } from 'react'\nimport { useQuery } from 'react-query'\n// Components\nimport Item from './Item/Item'\nimport Drawer from '@material-ui/core/Drawer';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Grid from '@material-ui/core/Grid';\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\nimport badge from '@material-ui/core/Badge';\n// styles\nimport { Wrapper } from './App.styles';\n\n//Types\n\nexport type CartItemType = {\n  id: number;\n  categoty: string;\n  description: string;\n  image: string;\n  price: number;\n  title: string;\n  amount: number;\n}\n\nconst getProducts = async (): Promise<CartItemType[]> =>\n  await (await fetch('https://fakestoreapi.com/products')).json();\n\nconst App = () => {\n  const { data, isLoading, error } = useQuery<CartItemType[]>(\n    'products',\n    getProducts\n  );\n  console.log(data);\n\n  return <div className='App'>Start</div>;\n//   const getTotalItems = () => null;\n\n//   const handleAddToCart = (clickItem: CartItemType) => null;\n\n//   const handleRemoveFromcart = () => null;\n\n//   if (isLoading) return <LinearProgress />\n//   if (error) return <div>Somthing went wrong</div>;\n\n\n//   return\n//   <Wrapper>\n//     <Grid container spacing={3}>\n//       {data?.map(item => (\n\n//         <Grid item key={item.id} xs={12} sm={4}>\n//           <Item item={item} handleAddToCart={handleAddToCart} />\n//         </Grid>\n\n//       ))}\n//     </Grid>\n\n//   </Wrapper>\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}