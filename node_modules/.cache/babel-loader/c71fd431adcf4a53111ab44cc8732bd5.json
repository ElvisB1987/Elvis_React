{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Elvis\\\\Desktop\\\\QuantoxTask\\\\React_E_Comerce\\\\react-schopping-cart\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useQuery } from 'react-query'; // Components\n\nimport Item from './Item/Item';\nimport Cart from './Cart/Cart';\nimport Drawer from '@material-ui/core/Drawer';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Grid from '@material-ui/core/Grid';\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\nimport Badge from '@material-ui/core/Badge'; // styles\n\nimport { Wrapper, StyledButton } from './App.styles'; //Types\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getProducts = async () => await (await fetch('https://fakestoreapi.com/products')).json();\n\nconst App = () => {\n  _s();\n\n  const [cartOpen, setCartOpen] = useState(false);\n  const [cartItems, setCartItems] = useState([]);\n  const {\n    data,\n    isLoading,\n    error\n  } = useQuery('products', getProducts);\n  console.log(data);\n\n  const getTotalItems = items => items.reduce((ack, items) => ack + items.amount, 0);\n\n  const handleAddToCart = clickedItem => {\n    setCartItems(prev => {\n      // 1. Is Item alredy in cart?\n      const isItemInCart = prev.find(item => item.id === clickedItem.id);\n\n      if (isItemInCart) {\n        return prev.map(item => item.id === clickedItem.id ? { ...item,\n          amount: item.amount + 1\n        } : item);\n      }\n    }); //First time the item is added\n\n    return [...prev, { ...clickedItem,\n      amount: 1\n    }];\n  };\n\n  const handleRemoveFromCart = () => null;\n\n  if (isLoading) return /*#__PURE__*/_jsxDEV(LinearProgress, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Somthing went wrong\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Drawer, {\n      anchor: \"right\",\n      open: cartOpen,\n      onClose: () => setCartOpen(false),\n      children: /*#__PURE__*/_jsxDEV(Cart, {\n        cartItems: cartItems,\n        addToCart: handleAddToCart,\n        removeFromCart: handleRemoveFromCart\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledButton, {\n      onClick: () => setCartOpen(true),\n      children: /*#__PURE__*/_jsxDEV(Badge, {\n        badgeContent: getTotalItems(cartItems),\n        color: \"error\",\n        children: /*#__PURE__*/_jsxDEV(AddShoppingCartIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: data === null || data === void 0 ? void 0 : data.map(item => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 4,\n        children: /*#__PURE__*/_jsxDEV(Item, {\n          item: item,\n          handleAddToCart: handleAddToCart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"sNjVdc7sEflwnqV2PP/uW1253TQ=\", false, function () {\n  return [useQuery];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Elvis/Desktop/QuantoxTask/React_E_Comerce/react-schopping-cart/src/App.tsx"],"names":["useState","useQuery","Item","Cart","Drawer","LinearProgress","Grid","AddShoppingCartIcon","Badge","Wrapper","StyledButton","getProducts","fetch","json","App","cartOpen","setCartOpen","cartItems","setCartItems","data","isLoading","error","console","log","getTotalItems","items","reduce","ack","amount","handleAddToCart","clickedItem","prev","isItemInCart","find","item","id","map","handleRemoveFromCart"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport { useQuery } from 'react-query'\n// Components\nimport Item from './Item/Item'\nimport Cart from './Cart/Cart'\nimport Drawer from '@material-ui/core/Drawer';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Grid from '@material-ui/core/Grid';\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\nimport Badge from '@material-ui/core/Badge';\n// styles\nimport { Wrapper, StyledButton } from './App.styles';\n\n//Types\n\nexport type CartItemType = {\n  id: number;\n  categoty: string;\n  description: string;\n  image: string;\n  price: number;\n  title: string;\n  amount: number;\n}\n\nconst getProducts = async (): Promise<CartItemType[]> =>\n  await (await fetch('https://fakestoreapi.com/products')).json();\n\nconst App = () => {\n  const [cartOpen, setCartOpen] = useState(false);\n  const [cartItems, setCartItems] = useState([] as CartItemType[])\n  const { data, isLoading, error } = useQuery<CartItemType[]>(\n    'products',\n    getProducts\n  );\n  console.log(data);\n\n\n  const getTotalItems = (items: CartItemType[]) =>\n\n    items.reduce((ack: number, items) => ack + items.amount, 0);\n\n  const handleAddToCart = (clickedItem: CartItemType) => {\n    setCartItems(prev => {\n      // 1. Is Item alredy in cart?\n      const isItemInCart = prev.find(item => item.id === clickedItem.id)\n\n      if(isItemInCart) {\n        return prev.map (item => \n          item.id === clickedItem.id\n          ? {...item, amount: item.amount +1}\n          : item\n        );\n      }\n    });\n    //First time the item is added\n\n    return [...prev, {...clickedItem, amount:1}];\n  };\n\n  const handleRemoveFromCart = () => null;\n\n  if (isLoading) return <LinearProgress />\n  if (error) return <div>Somthing went wrong</div>;\n\n\n  return (\n    <Wrapper>\n      <Drawer anchor='right' open={cartOpen} onClose={() => setCartOpen(false)}>\n        <Cart\n          cartItems={cartItems}\n          addToCart={handleAddToCart}\n          removeFromCart={handleRemoveFromCart}\n\n        />\n      </Drawer>\n      <StyledButton onClick={() => setCartOpen(true)}>\n        <Badge badgeContent={getTotalItems(cartItems)} color='error'>\n          <AddShoppingCartIcon />\n        </Badge>\n      </StyledButton>\n      <Grid container spacing={3}>\n        {data?.map(item => (\n\n          <Grid item key={item.id} xs={12} sm={4}>\n            <Item item={item} handleAddToCart={handleAddToCart} />\n          </Grid>\n\n        ))}\n      </Grid>\n\n    </Wrapper>\n  );\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}